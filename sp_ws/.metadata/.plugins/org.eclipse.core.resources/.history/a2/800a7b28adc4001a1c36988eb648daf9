package com.will.herb.board.model;

import java.util.List;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.will.herb.common.SearchVO;

@Repository
public class BoardDAOMybatis implements BoardDAO{
	@Autowired
	private SqlSessionTemplate sqlSession;
		
	private String namespace="config.mybatis.mapper.oracle.board.";
	
	public int insertBoard(BoardVO vo){
		int cnt=sqlSession.insert(namespace+"insertBoard", vo);
		return cnt;
	}
	
	
	public List<BoardVO> selectAll(SearchVO searchVo){
//		String sql="select * from board";
//		if(keyword!=null && !keyword.isEmpty()) { //검색의 경우
//			sql+=" where "+ condition +" like '%' || ? || '%'";
//		}		
//		sql+=" order by no desc";
		
		return sqlSession.selectList(namespace+"selectAll", searchVo);
	}


	@Override
	public int selectTotalRecord(SearchVO searchVo) {
		return sqlSession.selectOne(namespace+"selectTotalRecord", 
			searchVo);
	}
	
	public int updateReadCount(int no){
		return sqlSession.update(namespace+"updateReadCount", no);		
	}
	
	public BoardVO selectByNo(int no){
		return sqlSession.selectOne(namespace+"selectByNo",no);
	}
	
	public String selectPwd(int no){
		return sqlSession.selectOne(namespace+"selectPwd",no);
	}
		
	public int updateBoard(BoardVO vo) {
		return sqlSession.update(namespace+"updateBoard", vo);		
	}
	
	public int deleteBoard(int no) {
		return sqlSession.delete(namespace+"deleteBoard", no);
		
	}
}
	/*
	
	public List<BoardVO> selectMainNotice() throws SQLException {
		
		Connection con=null;
		PreparedStatement ps=null;
		ResultSet rs=null;
		
		List<BoardVO> list = new ArrayList<BoardVO>();
		try {
			//1,2
			con=pool.getConnection();
			
			//3
			String sql="select A.*" + 
					"		from" + 
					"		(" + 
					"		    select no, title" + 
					"		    from board order by no desc" + 
					"		)A" + 
					"		where rownum<=6";
			
			ps=con.prepareStatement(sql);
						
			rs=ps.executeQuery();
			while(rs.next()) {
				BoardVO vo = new BoardVO();
				
				vo.setNo(rs.getInt("no"));
				vo.setTitle(rs.getString("title"));
				
				list.add(vo);
			}
			
			System.out.println("메인 공지사항 조회 결과 list.size="
					+list.size());
			
			return list;
		}finally {
			pool.dbClose(con, ps, rs);
		}		
	}
		
	
	
	public int deleteBoard(int no) throws SQLException {
		Connection con=null;
		PreparedStatement ps=null;
		
		try {
			con=pool.getConnection();
			
			String sql="delete from board" + 
					" where no=?";
			ps=con.prepareStatement(sql);
			
			ps.setInt(1, no);
			
			int cnt=ps.executeUpdate();
			System.out.println("글삭제 결과, cnt="+cnt+", 매개변수 no="+no);
			
			return cnt;
		}finally {
			pool.dbClose(con, ps);
		}
	}
	
	*/




